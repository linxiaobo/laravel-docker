services:
  web:
    build:
      context: ./docker/development/nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
    volumes:
      # Mount the application code for live updates
      - ./src:/var/www/html:delegated
      # Mount the Nginx configuration file
      - ./docker/development/nginx/conf/laravel.conf:/etc/nginx/conf.d/template/laravel.conf
      - ./logs:/var/log/nginx
    ports:
      # Map port 80 inside the container to the port specified by 'NGINX_PORT' on the host machine
      - "80:80"
    environment:
      - SERVER_NAME=${SERVER_NAME}
    networks:
      - laravel-development
    depends_on:
      php-fpm:
        condition: service_started  # Wait for php-fpm to start

  php-fpm:
    # For the php-fpm service, we will create a custom image to install the necessary PHP extensions and setup proper permissions.
    build:
      context: .
      dockerfile: ./docker/common/php-fpm/Dockerfile
      target: development
      args:
        PHP_VERSION: ${PHP_VERSION}
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        XDEBUG_ENABLED: ${XDEBUG_ENABLED:-true}
        XDEBUG_MODE: develop,coverage,debug,profile
        XDEBUG_HOST: ${XDEBUG_HOST:-host.docker.internal}
        XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY:-DOCKER}
        XDEBUG_LOG: /dev/stdout
        XDEBUG_LOG_LEVEL: 0
    env_file:
      # Load the environment variables from the Laravel application
      - .env
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      # Mount the application code for live updates
      - ./src:/var/www/html:delegated
    networks:
      - laravel-development
      - mysql
    depends_on:
      mysql:
        condition: service_started  # Wait for database server to start

  workspace:
   # For the workspace service, we will also create a custom image to install and setup all the necessary stuff.
    build:
      context: .
      dockerfile: ./docker/development/workspace/Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        XDEBUG_ENABLED: ${XDEBUG_ENABLED:-true}
        XDEBUG_MODE: develop,coverage,debug,profile
        XDEBUG_HOST: ${XDEBUG_HOST:-host.docker.internal}
        XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY:-DOCKER}
        XDEBUG_LOG: /dev/stdout
        XDEBUG_LOG_LEVEL: 0
    tty: true  # Enables an interactive terminal
    stdin_open: true  # Keeps standard input open for 'docker exec'
    env_file:
      - .env
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel-development
      - mysql

#  postgres:
#    image: postgres:16
#    ports:
#      - "${POSTGRES_PORT:-5432}:5432"
#    environment:
#      - POSTGRES_DB=app
#      - POSTGRES_USER=laravel
#      - POSTGRES_PASSWORD=secret
#    volumes:
#      - postgres-data-development:/var/lib/postgresql/data
#    networks:
#      - laravel-development

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    restart: always
    volumes:
      - ./docker/development/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
      - mysql-data-development:/var/lib/mysql
    user: mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: abcABC123
    networks:
      - mysql

  redis:
    image: redis:alpine
    networks:
      - laravel-development

networks:
  laravel-development:
  mysql:

volumes:
  #postgres-data-development:
  mysql-data-development:
